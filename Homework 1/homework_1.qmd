---
title: "STAT 631 Homework 1"
author: "Jack Cunningham (jgavc@tamu.edu)"
date: 08/27/2024
date-format: short
format:
  pdf:
    include-in-header:
      - text: |
          \usepackage{amsmath}
editor: visual
engine: knitr
---

1\)

```{r, fig.height = 8}
set.seed(2012)
n = 253
par(mfrow = c(3,3))
for (i in (1:9)){
  logr = rnorm(n, 0.05/253, 0.2/sqrt(253))
  price = c(120, 120 * exp(cumsum(logr)))
  plot(price, type = "l")
}
```

Problem 9)

We are generating the daily log-return data by using a normal distribution with parameters $\mu=\frac{0.05}{253}$ and $\sigma=\frac{0.2}{\sqrt{253}}$. Thus for a one year period (with 253 trading days) the mean of the log-return is $\mu t=\frac{0.05}{253}(253)=0.05$ and the standard deviation is $\sigma\sqrt{t}=\frac{0.2}{\sqrt{253}}(\sqrt{253})=0.2$.

Problem 10)

We can see many clumps of time where it appears positive (negative) returns are followed by positive (negative) returns. In this case we are sure that this appearance of momentum is an illusion since we generated this simulation with i.i.d log-returns. In other words each day's return was independent and was not impacted by the previous days.

Problem 11)

First we have the c() function which serves to concatenate vectors. Its first entry is the initial price of the asset, 120. Its second entry is a bit more involved. The variable logr has each days generated log return. The cumsum function creates a cumulative summation of the vector logr. This allows us to track the log return as it moves over time. We take constant $e$ and raise it by the cumulative log return to bring us back to the cumulative return. We then multiply by 120 to get the prices for each day.

2\.

Problem 17)\

```{r}
data = read.csv('MCD_PriceDaily.csv')
logReturn = diff(log(data[,"Adj.Close"]))
head(logReturn)
```

```{r}
#Simulation of situation
niter = 10000
set.seed(2015)
outcome = rep(0, niter)

for(i in (1:niter)){
  logr = rnorm(20, mean = mean(logReturn), sd = sd(logReturn))
  price = 93.07*exp(cumsum(logr))
  
  #Boolean with check to see if price went under 84.5
  outcome[i] = ifelse(sum(price < 84.5) >= 1, 125, -1)
  
}
```

```{r}
#Expected Value from Bet
ev <- mean(outcome)
s <- sd(outcome)
lower <- ev - qt(.975,df = niter - 1)*s/sqrt(niter)
upper <- ev + qt(.975,df = niter - 1)*s/sqrt(niter)
ev
c(lower,upper)
```

The expected value from the bet is `r ev` with a confidence interval of (`r round(lower,3)`, `r round(upper,3)`). With this information I would avoid taking this bet.

3\)

a\)

Log-returns are normally distributed with parameters $\mu = 0.001, \sigma = 0.015$.

We know:

$\log(P_1)=\log(P_0)+\log(1 + R_1(t))$.

In this case we are looking for the chance of initial price $P_0=1000$ dropping to less than $P_1=990$ in the next day. That is a return of $R_1=\frac{990-1000}{1000}=-0.01$. So we need to find the chance of a $\log(1 -0.01)=\log(.99)$ move in the log return or less. That is:

$P[r \leq \log(.99)]=P[r^* \leq \frac{\log(.99)-0.001}{0.015}]$

```{r}
Z = (log(.99) - .001)/0.015
chance = pnorm(Z)
chance
```

There is a probability of `r round(chance, 3)` that tomorrow price for this investment will drop to below \$990.

b\)

Since $r_1,r_2,â€¦r_t$ are i.i.d with a normal distribution. When $r_1,r_2,r_3,r_4,r_5$ are added together their cumulative distribution is $N(5 \mu,5\sigma^2)$. We have return $R_1=\frac{990-1000}{1000}=-0.01$. so we need to find the chance of a $\log(1-0.01) = \log(.99)$ move in the log return or less. That is:

$P[r_5 \leq log(.99)=P[r_5^* \leq\frac{log(.99)-0.001}{0.015\sqrt{5}}]$

```{r}
Z = (log(.99) - 0.001)/(0.015*sqrt(5))
chance = pnorm(Z)
chance
```

There is a probability of `r round(chance,3)` that this investment will be worth less than \$990 after 5 trading days.

4\)

Given $P_1=95,P_2=103,P_3=98$. We need to find $r_3(2)$.

We know that $r_t(k)=r_t+r_{t-1}+\dots+r_{t-k+1}$

And that $r_t=\log(\frac{P_t}{P_{t-1}})=p_t-p_{t-1}$

In this case $t =3$ and $k=2$. So:

$r_3(2)=r_3+r_2=\log(\frac{98}{103})+\log(\frac{103}{95})=\log(98)-\log(103)+\log(103)-\log(95)=\log(98)-\log(95)$

```{r}
r_3_2 <- log(98)-log(95)
r_3_2
```

$r_3(2)$=`r round(r_3_2,5)`.

```{r message=FALSE, warning=FALSE}
#Generating Symbols
library(quantmod)
getSymbols(Symbols = c("^GSPC","CVX","AMZN"), 
           from = "2005-01-01", to = "2024-08-01", )
```

```{r}
#Getting Adjusted Close
SnP_500_AC <- GSPC[, "GSPC.Adjusted"]
Chevron_AC <- CVX[, "CVX.Adjusted"]
Amazon_AC <- AMZN[, "AMZN.Adjusted"]
```

```{r}
#Getting daily log return
SnP_500_dlr <- dailyReturn(SnP_500_AC, type = "log")
Chevron_dlr <- dailyReturn(Chevron_AC, type = "log")
Amazon_dlr <- dailyReturn(Amazon_AC, type = "log")
```

5\.

a\)

```{r}
plot(SnP_500_AC["2018-01-01::2024-8-01"], main = "GSPC Stock Price")
plot(SnP_500_dlr["2018-01-01::2024-8-01"], main = "GSPC Daily Log Return")
```

One of the first major events in this time period was the sell off at the end of 2018. That December there were a few factors that drove volatility, most importantly in my opinion was a concern about the stability of the economy as the FED continued raising rates and reducing their balance sheet after a mediocre November 2018 jobs report. Another factor that drove a lot of volatility throughout 2018, and much of the Trump presidency, were the trade and tariff negotiations with China. There was a ton of action and counteraction between the US and China, tariffs and counter-tariffs would hit the news, or be tweeted directly from Trump himself, and cause a flurry of trading action. The reason I believe the overall economic condition concerns were the primary cause of the sell-off is because on December 1st 2018 the US and China agreed on a 90-day halt to new tariffs, seeming to indicate some positive traction on a trade deal. But it would remiss to not believe it was a combination of the two.

In August of 2019 there was a lot volatility despite a lack of direction on the month, this was mainly due to trade tensions between the US and China and a yield reversion in the bond market causing some recessionary fears. On August 5th Trump had accused China of currency manipulation after the yuan steeply fell in value, that day the S&P 500 dropped about 3% fearing a ignition in the trade war.

In Match of 2020 there was COVID-19. A historic amount of uncertainty was present in the market as investors debated how it would affect the global economy. Ultimately the recovery after the sell-off was rather steep.

Throughout 2022 and 2023 the market faced what appeared to be runaway inflation with CPI peaking at 9.1% and a new conflict as Russia invaded Ukraine. The ascent of inflation at this time forced the reluctant FED into action to begin raising rates. The FED had been consistent about the theory that inflation was transitory, a temporary blip in prices due to COVID supply chain disruption. However as 2022 progressed and the CPI kept hitting new highs the FED had to begin raising the Federal Funds rate, with 11 hikes between March of 2022 and July of 2023. The federal funds target went from 0-.25% to 5.25-5.50% in that time. At the same time the Russian invasion of Ukraine heightened the risk of a global conflict and lead to a realignment in the global economy as west powers began placing embargoes on Russia. The S&P would sell off and recover in 2023 and 2024.

Most recently there was a large amount of volatility at the start of August 2024. Part of the concern was a bad job report for July, raising concerns that a weakened job market would wreck the soft landing the FED has been striving for. Another aspect was a rate hike in Japan, the first since 2007, and an indication that there may be more hawkish actions to come. There was a large amount of institutions executing the "yen carry trade". The trader would borrow yen for an extremely low interest rate and buy, for instance, a treasury bill in the US paying north of 5%. The trader faces foreign exchange risk in this transaction, if the value of the yen appreciates relative to the dollar the amount of yen they have to pay back becomes more expensive to buy. After the actions taken by the central back in Japan the unwinding of this transaction arguably caused a lot of volatility in these couple of days.

b\)

```{r warning=FALSE, message=FALSE}
library(tidyverse)
stock_data <- data.frame(
  date = index(GSPC),
  SnP_500_AD = as.numeric(GSPC[, "GSPC.Adjusted"]),
  Chevron_AD = as.numeric(CVX[, "CVX.Adjusted"]),
  Amazon_AD = as.numeric(AMZN[, "AMZN.Adjusted"]),
  SnP_500_dlr = as.numeric(dailyReturn(Ad(GSPC), type = "log")),
  Chevron_dlr = as.numeric(dailyReturn(Ad(CVX), type = "log")),
  Amazon_dlr = as.numeric(dailyReturn(Ad(AMZN)), type = "log")
)
```

```{r}
library(tidyverse)
colors <- c("AMZN" = "#ff9900", "CVX" = "#0050AA")

stock_data |>
  filter(date > "2018-01-01") |> 
  ggplot(aes(x = date)) +
  geom_line(aes(y = Chevron_AD, color = "CVX")) +
  geom_line(aes(y = Amazon_AD, color = "AMZN")) +
  labs(title = "CVX and AMZN Stock Prices", x = "Date", y = "price", 
       color = "Legend") +
  scale_color_manual(values = colors)
```

```{r}
stock_data |>
  filter(date > "2018-01-01") |> 
  ggplot(aes(x = date)) +
  geom_line(aes(y = Chevron_dlr, color = "CVX")) +
  geom_line(aes(y = Amazon_dlr, color = "AMZN"), alpha = 0.8) +
  labs(title = "CVX and AMZN Daily Log Return", x = "Date", y = "Log Return", 
       color = "Legend") +
  scale_color_manual(values = colors)
```

The most striking impact to compare these two stocks is their performance in the COVID pandemic. Just by taking a look at the daily log return graph we can see the huge volatility at the start of the pandemic for Chevron while Amazon's was much more muted compared to Chevron and the overall market. Chevron is an energy corporation who fracks and produces oil and gas, and naturally is very exposed to the demand shrinking as it did under lock-downs in the early pandemic. Amazon on the other hand thrived in the lock-down era as many consumers preferred to order their essentials online instead of venturing into a store.

6\)

a\)

```{r fig.height= 10, fig.width= 10}
CVX_returns <- list(
  daily = dailyReturn(Ad(CVX), leading = "F", type = "log"),
  weekly = weeklyReturn(Ad(CVX), leading = "F", type = "log"),
  monthly = monthlyReturn(Ad(CVX), leading = "F", type = "log")
)

par(mfcol = c(2,3))

for(i in  1:3 ){
  #Generating Histogram
  hist(CVX_returns[[i]], breaks = "scott", 
       main = paste("Histogram of", names(CVX_returns)[i],"log return"),
       xlab = "CVX Return")
  #Generating qq plot
  qqnorm(CVX_returns[[i]],
         main = paste("Normal Q-Q Plot",names(CVX_returns)[i],"log return"))
  qqline(CVX_returns[[i]])
}

```

b\)

In the daily log return quantile we can see the longer tails in the sample quantile when compared to the standard normal. This effect dissipates somewhat as the time of return gets larger and return data becomes more linear in shape but even for a monthly return the normal distribution does not fit the data well.
