---
title: "STAT 631 Homework 1"
author: "Jack Cunningham (jgavc@tamu.edu)"
date: 08/27/2024
date-format: short
format:
  pdf:
    include-in-header:
      - text: |
          \usepackage{amsmath}
editor: visual
engine: knitr
---

1\)

```{r, fig.height = 8}
set.seed(2012)
n = 253
par(mfrow = c(3,3))
for (i in (1:9)){
  logr = rnorm(n, 0.05/253, 0.2/sqrt(253))
  price = c(120, 120 * exp(cumsum(logr)))
  plot(price, type = "l")
}
```

Problem 9)

We are generating the daily log-return data by using a normal distribution with parameters $\mu=\frac{0.05}{253}$ and $\sigma=\frac{0.2}{\sqrt{253}}$. Thus for a one year period (with 253 trading days) the mean of the log-return is $\mu t=\frac{0.05}{253}(253)=0.05$ and the standard deviation is $\sigma\sqrt{t}=\frac{0.2}{\sqrt{253}}(\sqrt{253})=0.2$.

Problem 10)

We can see many clumps of time where it appears positive (negative) returns are followed by positive (negative) returns. In this case we are sure that this appearance of momentum is an illusion since we generated this simulation with i.i.d log-returns. In other words each day's return was independent and was not impacted by the previous days.

Problem 11)

First we have the c() function which serves to concatenate vectors. Its first entry is the initial price of the asset, 120. Its second entry is a bit more involved. The variable logr has each days generated log return. The cumsum function creates a cumulative summation of the vector logr. This allows us to track the log return as it moves over time. We take constant $e$ and raise it by the cumulative log return to bring us back to the cumulative return. We then multiply by 120 to get the prices for each day.

2\.

Problem 17)\

```{r}
data = read.csv('MCD_PriceDaily.csv')
logReturn = diff(log(data[,"Adj.Close"]))
head(logReturn)
```

```{r}
#Simulation of situation
niter = 10000
set.seed(2015)
outcome = rep(0, niter)

for(i in (1:niter)){
  logr = rnorm(20, mean = mean(logReturn), sd = sd(logReturn))
  price = 93.07*exp(cumsum(logr))
  
  #Boolean with check to see if price went under 84.5
  outcome[i] = ifelse(sum(price < 84.5) >= 1, 125, -1)
  
}
```

```{r}
#Expected Value from Bet
ev <- mean(outcome)
s <- sd(outcome)
lower <- ev - qt(.975,df = niter - 1)*s/sqrt(niter)
upper <- ev + qt(.975,df = niter - 1)*s/sqrt(niter)
ev
c(lower,upper)
```

The expected value from the bet is `r ev` with a confidence interval of (`r round(lower,3)`, `r round(upper,3)`). With this information I would avoid taking this bet.

3\)

a\)

Log-returns are normally distributed with parameters $\mu = 0.001, \sigma = 0.015$.

We know:

$\log(P_1)=\log(P_0)+\log(1 + R_1(t))$.

In this case we are looking for the chance of initial price $P_0=1000$ dropping to less than $P_1=990$ in the next day. That is a return of $R_1=\frac{990-1000}{1000}=-0.01$. So we need to find the chance of a $\log(1 -0.01)=\log(.99)$ move in the log return or less. That is:

$P[r \leq \log(.99)]=P[r^* \leq \frac{\log(.99)-0.001}{0.015}]$

```{r}
Z = (log(.99) - .001)/0.015
chance = pnorm(Z)
chance
```

There is a probability of `r round(chance, 3)` that tomorrow price for this investment will drop to below \$990.

b\)

Since $r_1,r_2,â€¦r_t$ are i.i.d with a normal distribution. When $r_1,r_2,r_3,r_4,r_5$ are added together their cumulative distribution is $N(5 \mu,5\sigma^2)$. We have return $R_1=\frac{990-1000}{1000}=-0.01$. so we need to find the chance of a $\log(1-0.01) = \log(.99)$ move in the log return or less. That is:

$P[r_5 \leq log(.99)=P[r_5^* \leq\frac{log(.99)-0.001}{0.015\sqrt{5}}]$

```{r}
Z = (log(.99) - 0.001)/(0.015*sqrt(5))
chance = pnorm(Z)
chance
```

There is a probability of `r round(chance,3)` that this investment will be worth less than \$990 after 5 trading days.

3\)

Given $P_1=95,P_2=103,P_3=98$. We need to find $r_3(2)$.

We know that $r_t(k)=r_t+r_{t-1}+\dots+r_{t-k+1}$

And that $r_t=\log(\frac{P_t}{P_{t-1}})=p_t-p_{t-1}$

In this case $t =3$ and $k=2$. So:

$r_3(2)=r_3+r_2=\log(\frac{98}{103})+\log(\frac{103}{95})=\log(98)-\log(103)+\log(103)-\log(95)=\log(98)-\log(95)$

```{r}
r_3_2 <- log(98)-log(95)
r_3_2
```

$r_3(2)$=`r round(r_3_2,5)`.
